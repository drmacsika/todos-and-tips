GraphQL Query
<---------------------------------------->
---------------
Query all books
---------------
query {
  allBooks {
    id
    title
    author
    yearPublished
    review
  }
}
-------------------
Query specific book
-------------------
query {
  book(bookId: 2) {
    id
    title
    author
  }
}
--------------------
Create new book item
--------------------
mutation createMutation {
  createBook(bookData: {title: "Things Apart", author: "Chinua Achebe", yearPublished: "1985", review: 3}) {
    book {
      title,
      author,
      yearPublished,
      review
    }
  }
}
---------------
Update a book
---------------
mutation updateMutation {
  updateBook(bookData: {id: 6, title: "Things Fall Apart", author: "Chinua Achebe", yearPublished: "1958", review: 5}) {
    book {
      title,
      author,
      yearPublished,
      review
    }
  }
}
--------------
Delete a book
--------------
mutation deleteMutation{
  deleteBook(id: 6) {
    book {
      id
    } 
  }
}

How mutation works
<---------------------------------------->
# class mutationName(graphene.mutation):
#       class Arguments:
#     . . .
#   what_were_returning = graphene.Field(SomeType)
#   def mutate(self, info, args ...):
#     . . .
#     return mutationName(what_were_returning)
<---------------------------------------->